OC有两个初始化相关的方法，分别是load和initialize。本文主要总结一下这两个方法的区别与联系、使用场景和注意事项。

### load
> 调用时机：

* load方法是在Compile Sources中的文件被程序装载时调用。也就是说在main函数之前就已经被调用。
* 如果一个类实现了load方法，在调用这个方法之前会首先调用父类方法。并且是自动调用，不需要我们手动调用。反之没实现就不会调用父类的load方法。
* load方法调用时，系统处于脆弱状态，不建议调用其他类的方法，如果要调用，必须保证那个类load方法已经调用。
* Compile Sources中的文件排放顺序其实就是其装载顺序，但是要注意子类实现了load方法会先调用父类的方法。

> 使用场景：

上面提到，调用load方法是不安全的，应该尽量减少load方法中的逻辑。一般而言，除了Method Swizzle，别的逻辑都不应该放在load方法中实现。

### initialize
> 调用时机：

* 懒加载的方式，第一次给某个类发消息时调用，并且只调用一次。
* 即便子类没有实现initialize方法，父类的initialize方法也会被调用。如果在父类initialize方法里打印一句话，子类不实现initialize，这时候初始化子类，信息会被打印两次。

> 使用场景

initialize方法一般用于初始化全局变量或静态变量。

### 比较
1. load在文件加载的时候调用，在main函数之前；initialize在main函数之后，第一次对这个类发消息的时候调用。
2. load和initialize都会自动调用父类方法，不同的是，子类实现了load方法才会调用父类方法，并且父类方法比子类先调用；而initialize无论子类有没有实现initialize，父类的方法都会被调用。
3. load一般用于Method Swizzle，initialize一般用于初始化全局变量或静态变量。
4. 实现这两个方法时，都尽量简单一些。





